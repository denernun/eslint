{
  "root": true,
  "ignorePatterns": ["**/node_modules/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "",
      "parserOptions": {
        "project": ["tsconfig.eslint.json"],
        "createDefaultProgram": false
      },
      "plugins": [],
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/no-empty-lifecycle-method": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@angular-eslint/use-pipe-decorator": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app"
          }
        ],
        "no-var": "error",
        "no-empty": "error",
        "no-restricted-syntax": "error",
        "no-alert": "error",
        "no-console": "error",
        "no-debugger": "error",
        "no-useless-escape": "error",
        "eol-last": "error",
        "semi": "error",
        "no-multi-spaces": "error",
        "space-in-parens": ["error", "never"],
        "no-multiple-empty-lines": "error",
        "prefer-const": "error",
        "no-mixed-operators": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-trailing-spaces": "error",
        "prefer-object-spread": "error",
        "arrow-parens": ["error", "always"],
        "newline-per-chained-call": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-irregular-whitespace": "error",
        "no-new-func": "error",
        "no-redeclare": "error",
        "no-return-await": "error",
        "no-sequences": "error",
        "brace-style": ["error", "1tbs"],
        "class-methods-use-this": "off",
        "no-case-declarations": "error",
        "max-depth": ["error", 4],
        "max-params": ["error", 6],
        "max-statements": ["error", 6],
        "max-statements-per-line": 1,
        "max-lines-per-function": [
          "error",
          { "max": 20, "skipBlankLines": true, "skipComments": true }
        ],
        "max-len": [
          "error",
          {
            "code": 120,
            "ignoreComments": true,
            "ignoreTrailingComments": true,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
          }
        ],
        "no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "keyword-spacing": [
          "error",
          {
            "before": true,
            "after": true
          }
        ],
        "space-before-blocks": [
          "error",
          {
            "functions": "always",
            "keywords": "always",
            "classes": "always"
          }
        ],
        "arrow-spacing": [
          "error",
          {
            "before": true,
            "after": true
          }
        ],
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/no-explicit-any": [
          "error",
          { "fixToUnknown": true, "ignoreRestArgs": true }
        ],
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": false,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": false
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
          "error",
          {
            "allowArgumentsExplicitlyTypedAsAny": false,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowedNames": [],
            "allowHigherOrderFunctions": true,
            "allowTypedFunctionExpressions": true
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "format": ["camelCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["camelCase", "UPPER_CASE"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "should", "has", "can", "did", "will"]
          },
          {
            "selector": "function",
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          },
          {
            "selector": "property",
            "format": ["camelCase", "UPPER_CASE"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "method",
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "off",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array"
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
